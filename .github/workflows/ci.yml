name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Generate Prisma client
        run: bun run db:generate

      - name: Run type checking
        run: bun run type-check

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: bun run test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  test-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build extension
        working-directory: apps/vscode
        run: bun run build

      - name: Validate extension
        working-directory: apps/vscode
        run: |
          bun install -g vsce
          vsce ls

  test-browser-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate browser extension
        run: |
          cd apps/browser
          python3 -c "
          import json
          import sys
          try:
              with open('manifest.json', 'r') as f:
                  manifest = json.load(f)
              print('✅ Browser extension manifest is valid')
          except Exception as e:
              print(f'❌ Browser extension validation failed: {e}')
              sys.exit(1)
          "

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run security audit
        run: |
          bun audit
          cd apps/vscode && bun audit
